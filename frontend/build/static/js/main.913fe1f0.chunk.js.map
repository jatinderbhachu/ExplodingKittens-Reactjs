{"version":3,"sources":["AppContext.js","util/util.js","Socket.js","CreateLobby.js","LobbyBrowser.js","Welcome.js","NameForm.js","CardStack.js","CardStackOverlay.js","Opponents.js","ModalNotification.js","Game.js","App.js","serviceWorker.js","index.js"],"names":["AppContext","React","createContext","selectedCards","formatMsg","type","data","JSON","stringify","Socket","this","socket","undefined","connect","wsProtocol","window","location","protocol","WebSocket","hostname","onopen","e","console","log","document","dispatchEvent","CustomEvent","detail","OPEN","onclose","CLOSED","setTimeout","onmessage","raw","msg","parse","event","listener","addEventListener","removeEventListener","send","Player","props","player","uid","className","id","name","isHost","onClick","handleKick","CreateLobby","useState","players","setPlayers","context","useContext","history","useHistory","useParams","inviteLinkRef","useRef","updateLobby","lobbyID","settings","inviteCode","ID","startGame","inGame","currentTurn","push","target","parentElement","playerID","kick","goBack","useEffect","playerName","onSubmit","preventDefault","value","lobbyCode","handleSubmit","htmlFor","disabled","length","map","key","range","createRange","selectNode","current","getSelection","removeAllRanges","addRange","execCommand","copyInviteLink","ref","origin","LobbyBrowser","lobbies","setLobbies","updateLobbyList","refreshList","lobby","index","state","Welcome","handleLobbyBrowserSubmit","handleCreateLobbySubmit","NameForm","setName","setNameHandler","placeholder","onChange","required","CardToolTips","Card","hoverable","selected","cardName","changeSelectedCards","style","position","CardStack","cards","initialPos","boundary","selectable","spacing","width","inc","Array","isArray","top","y","left","x","card","indexOf","cardIndex","favorTarget","includes","from","_","setSelectPosition","CardStackOverlay","clickHandler","size","Opponents","opponents","isStealing","askingFavor","selectStealCard","selectFavorCard","selectFavorVictim","opponentWidth","opponentSpacing","opponent","Fragment","isDead","height","drewExploding","ModalNotification","duration","notificationRef","dropDownAnim","opacity","offset","animTiming","iterations","animate","WinnerPopup","winnerName","winnerID","winner","clientID","opp","FutureCards","zIndex","resetFutureCards","MoveHistory","setHistory","lastItem","updateMoveHistory","moveHistory","scrollIntoView","behavior","move","s","time","GameHook","setSelectedCards","useReducer","newState","initialRender","playerCards","drawPile","discardPile","turnsLeft","insertingExploding","futureCards","animCardsInitial","animCardsTarget","animCardsName","gameState","setGameState","drawPileLoc","discardPileLoc","playerPileLoc","updateGameState","initialPositions","targetPositions","cardNames","pCardChangedIndices","i","Object","is","diff","j","updateCardAnims","AnimatedCard","keyframes","timing","easing","delay","direction","fill","onFinish","opponentID","to","victimID","setExplodingPos","drawCard","val","playSelectedCards","find","op","Loading","Component","App","socketReady","setPlayerName","bind","websocketConnect","onCloseCallback","onOpenCallback","readyState","setState","askName","Provider","exact","path","component","Game","Boolean","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.913fe1f0.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst AppContext = React.createContext({ \r\n  selectedCards: []\r\n});\r\n\r\n\r\n\r\nexport default AppContext;\r\n","function formatMsg(type, data){\r\n  return JSON.stringify({type, data});\r\n}\r\n\r\nexport default formatMsg;\r\n","import formatMsg from \"./util/util\";\r\n//let Socket = new WebSocket(\"ws://\" + window.location.hostname + \":8080\");\r\nclass CustomSocket {\r\n  constructor(){\r\n    this.socket = undefined;\r\n\r\n    this.connect();\r\n\r\n  }\r\n\r\n  connect() {\r\n    let wsProtocol = (window.location.protocol === \"https:\") ? \"wss://\" : \"ws://\";\r\n    this.socket = new WebSocket(wsProtocol + window.location.hostname + \":8080\");\r\n    this.socket.onopen = (e) => {\r\n      console.log(\"socket is open\");\r\n      document.dispatchEvent(new CustomEvent(\"socket_state_change\", {detail: WebSocket.OPEN}));\r\n    };\r\n\r\n    this.socket.onclose = (e) => {\r\n      console.log(\"Socket connection closed, retrying in 3 seconds\");\r\n      document.dispatchEvent(new CustomEvent(\"socket_state_change\", {detail: WebSocket.CLOSED}));\r\n      setTimeout(this.connect, 3000);\r\n    }\r\n\r\n    console.log(this.socket);\r\n    this.socket.onmessage = (raw) => {\r\n      let msg = JSON.parse(raw.data);\r\n      console.log(msg);\r\n\r\n      // use custom events so socket messages can be read from anywhere\r\n      this.dispatchEvent(new CustomEvent(msg.type, { detail: msg.data }));\r\n    };\r\n  }\r\n\r\n  dispatchEvent(event){\r\n    this.socket.dispatchEvent(event)\r\n  }\r\n\r\n  addEventListener(type, listener){\r\n    this.socket.addEventListener(type, listener);\r\n  }\r\n\r\n  removeEventListener(type, listener){\r\n    this.socket.removeEventListener(type, listener);\r\n  }\r\n\r\n  send(type, msg) {\r\n    this.socket.send(formatMsg(type, msg));\r\n  }\r\n\r\n\r\n};\r\n\r\nconst Socket = new CustomSocket();\r\n\r\nexport default Socket;\r\n","import React, { useContext, useState, useEffect, useRef} from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport AppContext from \"./AppContext\";\r\nimport \"./Lobby.css\";\r\nimport Socket from \"./Socket\";\r\n\r\nfunction Player(props) {\r\n  const { player, uid } = props;\r\n  return (\r\n    <div className=\"LobbyPlayer\" id={player.id}>\r\n      <div className=\"PlayerName\">{player.name}</div>\r\n      {(uid !== player.id && props.isHost) && <button className=\"KickButton\" onClick={props.handleKick}>X</button>}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction CreateLobby(props) {\r\n  const [players, setPlayers] = useState([]);\r\n  const context = useContext(AppContext);\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n  const inviteLinkRef = useRef();\r\n\r\n\r\n  function updateLobby(e) {\r\n    let data = e.detail;\r\n    context.lobbyID = data.settings.inviteCode;\r\n\r\n    for(let player of data.players){\r\n      if(player.id === context.ID){\r\n        context.isHost = player.isHost;\r\n      }\r\n    }\r\n\r\n    setPlayers(data.players);\r\n  }\r\n\r\n  function startGame(e) {\r\n    const data = e.detail;\r\n    context.inGame = true;\r\n    context.currentTurn = data.currentTurn;\r\n    history.push(\"/game\");\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    const settings = e.target;\r\n    //const Socket = this.context.socket;\r\n    //if (!settings[\"lobbyName\"].value.match(/^[0-9a-zA-Z]+$/)) {\r\n      //alert(\"Lobby name must only contain letters and numbers\");\r\n    //}\r\n    // trim and send lobby settings to server\r\n\r\n    Socket.send(\r\n      \"try_start_game\", {\r\n        settings: { name: settings[\"lobbyName\"].value },\r\n        lobbyCode: context.lobbyID,\r\n      }\r\n    );\r\n  }\r\n\r\n  function handleKick(e) {\r\n    const id = e.target.parentElement.id;\r\n\r\n    if(context.isHost) {\r\n      Socket.send(\"kick_player\", {lobbyID: context.lobbyID, playerID: id});\r\n    }\r\n\r\n  }\r\n\r\n  // When server acknowledges the kick, and tells this client to leave\r\n  function kick() {\r\n    history.goBack();\r\n  }\r\n\r\n  useEffect(() => {\r\n    Socket.addEventListener(\"update_lobby\", updateLobby);\r\n    Socket.addEventListener(\"start_game\", startGame);\r\n\r\n    Socket.addEventListener(\"kick\", kick);\r\n\r\n\r\n    if(id === undefined){\r\n      console.log(\"Creating lobby\");\r\n      context.isHost = true;\r\n      Socket.send(\r\n        \"join_lobby\", { playerName: context.playerName }\r\n      );\r\n    } else {\r\n      console.log(\"Joining lobby\");\r\n      context.isHost = false;\r\n      Socket.send(\r\n        \"join_lobby\", { \r\n          playerName: context.playerName, \r\n          inviteCode: id\r\n        }\r\n      );\r\n    }\r\n\r\n    console.log(\"ID: \", id);\r\n\r\n    return function cleanup(){\r\n      Socket.removeEventListener(\"update_lobby\", updateLobby);\r\n      Socket.removeEventListener(\"start_game\", startGame);\r\n      Socket.removeEventListener(\"kick\", kick);\r\n    }\r\n  }, []);\r\n\r\n  function copyInviteLink() {\r\n    let range = document.createRange();\r\n    range.selectNode(inviteLinkRef.current);\r\n    window.getSelection().removeAllRanges(); // clear current selection\r\n    window.getSelection().addRange(range); // to select text\r\n    document.execCommand(\"copy\");\r\n    window.getSelection().removeAllRanges();// to deselect\r\n  }\r\n\r\n  function handleGoBack() {\r\n    Socket.send(\"leave_lobby\", {lobbyID: context.lobbyID});\r\n    context.lobbyID = undefined;\r\n    history.goBack();\r\n\r\n  }\r\n\r\n  const { isHost, lobbyID } = context;\r\n  let canStart = true;\r\n\r\n\r\n  return(\r\n    <>\r\n    <header className=\"AppHeader\"><h1>Exploding Kittens</h1></header>\r\n    <div className=\"CreateLobby-Container\">\r\n      <h1>\r\n        <button onClick={() => handleGoBack()}>{\"< Back\"}</button>\r\n        Create Custom Lobby\r\n      </h1>\r\n      <div className=\"CreateLobby\">\r\n      <form onSubmit={(e) => handleSubmit(e)}>\r\n        <h3>Lobby Settings</h3>\r\n\r\n        <div className=\"row\">\r\n        <div className=\"col-25\">\r\n          <label htmlFor=\"lobbyName\">Lobby Name</label>\r\n        </div>\r\n            <div className=\"col-75\">\r\n          <input\r\n            disabled={!isHost}\r\n            type=\"text\"\r\n            name=\"lobbyName\"\r\n            id=\"lobbyName\"\r\n          />\r\n            </div>\r\n        </div>\r\n\r\n        <input\r\n          disabled={!canStart || !isHost || (players.length < 2)}\r\n          type=\"submit\"\r\n          value=\"Start Game\"\r\n        />\r\n        <br/>\r\n        {!canStart && <span>All players must be ready</span>}\r\n      </form>\r\n      <div className=\"CreateLobby-Player-Container\">\r\n        <h3>Players</h3>\r\n        <div className=\"CreateLobby-Player\">\r\n        {players.map((player) => (\r\n          <Player\r\n            key={player.id}\r\n            player={player}\r\n            uid={context.ID}\r\n            handleKick={handleKick}\r\n            isHost={isHost}\r\n          />\r\n        ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    {isHost && (\r\n      <div className=\"Invite\">\r\n        Invite Link: (Click to copy)\r\n        <div onClick={() => copyInviteLink()} ref={inviteLinkRef}>{window.location.origin + \"/lobby/\" + lobbyID}</div>\r\n      </div>\r\n    )}\r\n    </div>\r\n    </>\r\n  );\r\n\r\n}\r\n\r\nexport default CreateLobby;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {useHistory} from \"react-router\";\r\nimport Socket from \"./Socket\";\r\n\r\nimport \"./LobbyBrowser.css\";\r\n\r\nfunction LobbyBrowser(props) {\r\n  const [lobbies, setLobbies] = useState([]);\r\n  const history = useHistory();\r\n\r\n  function updateLobbyList(e) {\r\n    const data = e.detail;\r\n\r\n    setLobbies(data.lobbies);\r\n\r\n  }\r\n\r\n  useEffect( () => {\r\n    Socket.addEventListener(\"update_lobby_list\", updateLobbyList);\r\n\r\n    if(lobbies.length < 1){\r\n      refreshList();\r\n    }\r\n\r\n    return function cleanup() {\r\n      Socket.removeEventListener(\"update_lobby_list\", updateLobbyList);\r\n\r\n    }\r\n  }, []);\r\n\r\n  function joinLobby(lobbyID) {\r\n    history.push(\"/lobby/\"+lobbyID);\r\n  }\r\n\r\n  function refreshList() {\r\n    Socket.send(\"get_lobby_list\", {});\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <header className=\"AppHeader\"><h1>Exploding Kittens</h1></header>\r\n    <div className=\"LobbyBrowser LobbyItem\">\r\n      <div className=\"Back\">\r\n        <button onClick={() => history.goBack()}>Back</button>\r\n      </div>\r\n      <span>\r\n        Lobby browser\r\n        <button onClick={() => refreshList()}>Refresh list</button>\r\n      </span>\r\n\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <td>Lobby name</td>\r\n            <td>Players</td>\r\n            <td>Game status</td>\r\n            <td></td>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {lobbies.map((lobby, index) => (\r\n            <tr key={index}>\r\n              <td>{lobby.name}</td>\r\n              <td>{lobby.players}</td>\r\n              <td>{lobby.state}</td>\r\n              <td>\r\n                {lobby.state === \"IN_LOBBY\" && (\r\n                  <button onClick={() => joinLobby(lobby.lobbyID)}>\r\n                    Join\r\n                  </button>\r\n                )}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    </>\r\n  );\r\n\r\n}\r\n\r\nexport default LobbyBrowser;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport \"./Welcome.css\";\r\n\r\nfunction Welcome(props) {\r\n  const history = useHistory();\r\n\r\n  function handleLobbyBrowserSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    history.push(\"/browser\");\r\n  }\r\n\r\n\r\n\r\n  function handleCreateLobbySubmit(e) {\r\n    e.preventDefault();\r\n\r\n    history.push(\"/createLobby\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <header className=\"AppHeader\"><h1>Exploding Kittens</h1></header>\r\n    <div className=\"Welcome-Container\">\r\n      <div className=\"BrowseButtons\">\r\n        <button type=\"submit\" onClick={(e) => handleLobbyBrowserSubmit(e)}>Browse Lobbies</button>\r\n        <button type=\"submit\" onClick={(e) => handleCreateLobbySubmit(e)}>Create Custom Lobby</button>\r\n      </div>\r\n      <div className=\"WelcomeInfo\">\r\n        <h3>About</h3>\r\n        <p>This is a clone of the Exploding kittens game, but now you can play it in your browser!</p>\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n\r\n}\r\n\r\n\r\nexport default Welcome;\r\n","import React, { useContext, useState } from \"react\";\r\n\r\nimport \"./NameForm.css\";\r\nimport AppContext from \"./AppContext\";\r\n\r\nfunction NameForm(props) {\r\n  const [name, setName] = useState(\"\");\r\n  const context = useContext(AppContext);\r\n\r\n\r\n  function handleSubmit(e){\r\n    e.preventDefault();\r\n\r\n    context.playerName = name;\r\n    // FIXME: validate the name\r\n    props.setNameHandler(name);\r\n  }\r\n\r\n    return (\r\n      <>\r\n      <header className=\"AppHeader\"><h1>Exploding Kittens</h1></header>\r\n      <div className=\"NameForm-Container\">\r\n        <div className=\"NameForm\">\r\n          <form onSubmit={handleSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"nickname\"\r\n              id=\"nickname\"\r\n              placeholder=\"Enter nickname ... \"\r\n              value={name}\r\n              onChange={ e => setName(e.target.value) }\r\n              required\r\n            />\r\n            <br />\r\n            <input type=\"submit\" value=\"Set name\"/>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      </>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default NameForm;\r\n","import React from \"react\";\r\n\r\nfunction CardStack(props) {\r\n  const { cards, initialPos, boundary, selectable} = props;\r\n  let spacing = ((boundary.width-9)/cards.length);\r\n\r\n  let selectedCards = [];\r\n  if(selectable){\r\n    selectedCards = props.selectedCards;\r\n  }\r\n\r\n  let inc = 0;\r\n\r\n  if(!Array.isArray(cards)){\r\n    spacing = ((boundary.width-9)/cards);\r\n    if(boundary.width <= 9 && props.type === \"opponent\")\r\n      spacing = 0;\r\n\r\n    return(\r\n      <>\r\n        {Array.from({ length: cards }, (_, key) => (\r\n          <div\r\n            className={`Card ${props.hoverable ? \"Hoverable\" : \"\"} nonameCard`}\r\n            key={key}\r\n            style={{top: initialPos.y+\"%\", left: (initialPos.x+spacing*(inc++))+\"%\"}}\r\n            onClick={props.selectable ? () => props.setSelectPosition(key) : undefined}\r\n          ></div>\r\n        ))}\r\n        {props.name && \r\n          <div \r\n            className=\"OpponentName\"\r\n            style={{top: (initialPos.y-5)+\"%\", left: (initialPos.x+spacing*(cards/2))+\"%\"}}\r\n          >{props.name}</div>\r\n        }\r\n      </>\r\n    );\r\n  }\r\n\r\n  // changes the selectedCards whenever a card is clicked\r\n  // can only select multiple cards if they are of type cat\r\n  function changeSelectedCards(card){\r\n    let selectedCards = props.selectedCards;\r\n    //let indexOfCard = selectedCards.indexOf(card);\r\n    if(props.favorTarget){\r\n      props.changeSelectedCards([card]);\r\n      return;\r\n    }\r\n    if(selectedCards.length < 1){\r\n      props.changeSelectedCards([card]);\r\n    } else if(cards[selectedCards[0]].includes(\"cat\") && cards[card].includes(\"cat\") && selectedCards.indexOf(card) === -1){\r\n      //if(indexOfCard === -1){\r\n        props.changeSelectedCards([...selectedCards, card]);\r\n      //}\r\n    } else{\r\n      props.changeSelectedCards([card]);\r\n    }\r\n  }\r\n\r\n  return(\r\n    <>\r\n      {props.name && \r\n        <div \r\n          className=\"OpponentName\"\r\n          style={{top: (initialPos.y-5)+\"%\", left: (initialPos.x+(spacing | 0)*(inc))+\"%\"}}\r\n        >{props.name}</div>\r\n      }\r\n      {\r\n        cards.map((card, index) => \r\n          <Card \r\n            hoverable={props.hoverable} \r\n            selected={selectedCards.indexOf(index) !== -1}\r\n            key={index} \r\n            cardName={card}\r\n            cardIndex={index}\r\n            changeSelectedCards={props.selectable ? () => changeSelectedCards(index) : undefined}\r\n            position={{top: initialPos.y+\"%\", left: (initialPos.x+spacing*(inc++))+\"%\"}}\r\n          />\r\n      )\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nconst CardToolTips = {\r\n  \"favor\": \"Select another player and force them to hand over a card of their choice\",\r\n  \"attack\": \"Skip your turn, next player must draw 2 cards\",\r\n  \"cat1\": \"Use in combination with another cat card to steal any card from anyone\",\r\n  \"cat2\": \"Use in combination with another cat card to steal any card from anyone\",\r\n  \"cat3\": \"Use in combination with another cat card to steal any card from anyone\",\r\n  \"cat4\": \"Use in combination with another cat card to steal any card from anyone\",\r\n  \"cat5\": \"Use in combination with another cat card to steal any card from anyone\",\r\n  \"skip\": \"End your turn without drawing a card\",\r\n  \"defuse\": \"Defuse an exploding kitten card\",\r\n  \"exploding\": \":]\",\r\n  \"shuffle\": \"Shuffle the draw pile\",\r\n  \"nope\": \"Cancel any action except a defuse or exploding kitten\",\r\n  \"future\": \"Peak at 3 cards on top of the draw pile\"\r\n};\r\n\r\nfunction Card(props){\r\n\r\n  return(\r\n    <div \r\n      className={`Card ${props.hoverable ? \"Hoverable\" : \"\"} ${props.selected ? \"selected\" : \"\"} ${props.cardName}`}\r\n      onClick={props.changeSelectedCards}\r\n      style={props.position}>\r\n      <div className=\"CardToolTip\">{CardToolTips[props.cardName]}</div>\r\n      </div>\r\n  )\r\n\r\n}\r\n\r\nexport default CardStack;\r\n\r\n","import React from \"react\";\r\n\r\nimport \"./CardStackOverlay.css\";\r\n\r\nfunction CardStackOverlay(props) {\r\n  const { clickHandler, position, size, type } = props;\r\n  let className;\r\n\r\n  switch(type){\r\n    case \"selectable\":\r\n      className = \"CardStackOverlay\";\r\n      break;\r\n    case \"unselectable\":\r\n      className = \"CardStackOverlay-unselectable\";\r\n      break;\r\n    case \"dead\":\r\n      className = \"CardStackOverlay-DeadPlayer\";\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={className}\r\n      style={{...position, ...size}}\r\n      onClick={type===\"selectable\" ? () => clickHandler(): undefined}\r\n    ></div> \r\n  );\r\n\r\n}\r\n\r\nexport default CardStackOverlay;\r\n","import React from \"react\";\r\nimport CardStack from \"./CardStack\";\r\nimport CardStackOverlay from \"./CardStackOverlay\";\r\n\r\nfunction Opponents(props) {\r\n  const {\r\n    opponents,\r\n    isStealing,\r\n    favorTarget,\r\n    askingFavor,\r\n    selectStealCard,\r\n    selectFavorCard,\r\n    selectFavorVictim,\r\n  } = props;\r\n\r\n  // FIXME: add opponent padding\r\n  //const opponentPadding = 10;\r\n  const opponentWidth = 60 / opponents.length;\r\n  const opponentSpacing = (100 - opponentWidth) / opponents.length;\r\n\r\n  return opponents.map((opponent, index) => (\r\n    <React.Fragment key={opponent.id}>\r\n      {opponent.isDead && (\r\n        <CardStackOverlay\r\n          type=\"dead\"\r\n          position={{ top: \"5%\", left: opponentSpacing * index + \"%\" }}\r\n          size={{ width: opponentWidth + \"%\", height: \"23%\" }}\r\n        />\r\n      )}\r\n\r\n      {isStealing && !opponent.isDead && (\r\n        <CardStackOverlay\r\n          type=\"unselectable\"\r\n          position={{ top: \"0%\", left: opponentSpacing * index + \"%\" }}\r\n          size={{ width: opponentWidth + \"%\", height: \"28%\" }}\r\n        />\r\n      )}\r\n\r\n      <CardStack\r\n        type={\"opponent\"}\r\n        key={opponent.id}\r\n        cards={opponent.cards}\r\n        initialPos={{ x: opponentSpacing * index, y: 5 }}\r\n        boundary={{ width: opponentWidth }}\r\n        name={opponent.name}\r\n        selectable={isStealing}\r\n        hoverable={isStealing}\r\n        setSelectPosition={(index) => selectStealCard(opponent.id, index)}\r\n      />\r\n\r\n      {favorTarget === opponent.id && (\r\n        <CardStackOverlay\r\n          type=\"selectable\"\r\n          position={{ top: \"0%\", left: opponentSpacing * index + \"%\" }}\r\n          size={{ width: opponentWidth + \"%\", height: \"28%\" }}\r\n          clickHandler={() => selectFavorCard()}\r\n        />\r\n      )}\r\n\r\n      {askingFavor && (\r\n        <CardStackOverlay\r\n          type=\"selectable\"\r\n          position={{ top: \"0%\", left: opponentSpacing * index + \"%\" }}\r\n          size={{ width: opponentWidth + \"%\", height: \"28%\" }}\r\n          clickHandler={() => selectFavorVictim(opponent.id)}\r\n        />\r\n      )}\r\n\r\n      {/* FIXME: use an animated c4 background image for this div*/}\r\n      {opponent.drewExploding && (\r\n        <div\r\n          className=\"BombOverlay\"\r\n          style={{\r\n            top: \"5%\",\r\n            left: opponentSpacing * index + \"%\",\r\n            width: opponentWidth + \"%\",\r\n            height: \"28%\",\r\n          }}\r\n        ></div>\r\n      )}\r\n    </React.Fragment>\r\n  ));\r\n}\r\n\r\nexport default Opponents;\r\n","import React, { useEffect, useRef} from \"react\";\r\n\r\nfunction ModalNotification(props) {\r\n  const { duration, msg } = props;\r\n  const notificationRef = useRef(null);\r\n\r\n  const dropDownAnim = [\r\n    {top: '-14%', opacity: 1.0}, \r\n    {top: '0%', offset: 0.1}, \r\n    {top: '0%', offset: 0.9}, \r\n    {opacity: 1.0, offset: 0.9}, \r\n    {top: '-14%', opacity: 0.0}, \r\n  ];\r\n\r\n  const animTiming = {\r\n    duration: duration*1000,\r\n    iterations: 1\r\n  };\r\n\r\n  useEffect( () => {\r\n    notificationRef.current.animate(dropDownAnim, animTiming);\r\n  }, [props.msg]);\r\n\r\n  return (\r\n    <div className=\"ModalNotification\" ref={notificationRef}>{msg}</div>\r\n  );\r\n\r\n}\r\n\r\nexport default ModalNotification;\r\n","import React, { useState, useEffect, useContext, useReducer, useRef} from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport AppContext from \"./AppContext\";\r\nimport { Animation } from 'react-web-animation';\r\nimport Socket from \"./Socket\";\r\nimport Opponents from \"./Opponents\";\r\nimport CardStack from \"./CardStack\";\r\nimport ModalNotification from \"./ModalNotification\";\r\n\r\n\r\nimport \"./Game.css\";\r\nimport CardStackOverlay from \"./CardStackOverlay\";\r\n\r\nfunction GameHook() {\r\n\r\n  const context = useContext(AppContext);\r\n  const [selectedCards, setSelectedCards] = useState([]);\r\n\r\n\r\n  /*\r\n  // For debugging purposes\r\n  const [gameState, setGameState] = useReducer(\r\n    (state, newState) => ({...state, ...newState}),\r\n    {\r\n      initialRender: false,\r\n      playerCards: [\"cat1\", \"favor\",\"cat2\", \"favor\", \"defuse\", \"defuse\", \"skip\", \"cat2\", \"favor\", \"defuse\", \"cat4\", \"nope\", \"cat2\", \"favor\", \"defuse\"], \r\n      drawPile: 24,\r\n      discardPile: [\"cat2\", \"favor\", \"defuse\"],\r\n      opponents: [\r\n        {name: \"rardboya\", cards: 5, id: \"nsdfuoihy234\", isDead: false, drewExploding: false},\r\n        {name: \"ezpz\", cards: 7, id: \"hy234\", isDead: false, drewExploding: false},\r\n        {name: \"another1\", cards: 4, id: \"dfgjn\", isDead: false, drewExploding: false},\r\n      ],\r\n      drewExploding: false,\r\n      isDead: false,\r\n      turnsLeft: undefined,\r\n      currentTurn: undefined,\r\n      askingFavor: false,\r\n      isStealing: false,\r\n      insertingExploding: false,\r\n      futureCards: [],\r\n      favorTarget: undefined,\r\n      winner: undefined,\r\n\r\n      animCardsInitial: [],\r\n      animCardsTarget: [],\r\n      animCardsName: [],\r\n    }\r\n  );\r\n  */\r\n\r\n  const [gameState, setGameState] = useReducer(\r\n    (state, newState) => ({...state, ...newState}),\r\n    {\r\n      initialRender: true,\r\n      playerCards: [], \r\n      drawPile: [],\r\n      discardPile: [],\r\n      opponents: [],\r\n      isDead: false,\r\n      turnsLeft: undefined,\r\n      currentTurn: undefined,\r\n      askingFavor: false,\r\n      isStealing: false,\r\n      insertingExploding: false,\r\n      futureCards: [],\r\n      favorTarget: undefined,\r\n      drewExploding: false,\r\n      winner: undefined,\r\n\r\n      animCardsInitial: [],\r\n      animCardsTarget: [],\r\n      animCardsName: [],\r\n    }\r\n  );\r\n\r\n\r\n  const drawPileLoc = {x: 10, y: 43};\r\n  const discardPileLoc = {x: 60, y: 43};\r\n  const playerPileLoc = {x: 10, y: 71};\r\n  const moveHistoryLoc = {x: 73, y: 32};\r\n\r\n\r\n  function updateCardAnims(data, initialPositions, targetPositions, cardNames){\r\n\r\n    const {drawPile, discardPile, opponents, playerCards, pCardChangedIndices} = data;\r\n\r\n    // Check opponent card diffs\r\n    let opponentWidth = (60/(data.opponents.length));\r\n    let opponentSpacing = (100-opponentWidth)/data.opponents.length;\r\n    for(let i = 0; i < opponents.length; i++){\r\n\r\n      if(!Object.is(opponents[i].cards, gameState.opponents[i].cards)){\r\n        let diff = opponents[i].cards - gameState.opponents[i].cards;\r\n        if(diff > 0){\r\n          for(let j = 0; j < diff; j++){\r\n            targetPositions.push({top: 5, left: (opponentWidth/2) + opponentSpacing*i});\r\n            cardNames.push(\"nonameCard\");\r\n          }\r\n        } else if(diff < 0) {\r\n          for(let j = 0; j > diff; j--){\r\n            initialPositions.push({top: 5, left: (opponentWidth/2) + opponentSpacing*i});\r\n            cardNames.push(\"nonameCard\");\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n\r\n    // Check discard pile diff\r\n    if(!Object.is(discardPile, gameState.discardPile)){\r\n      let diff = discardPile.length - gameState.discardPile.length;\r\n      if(diff > 0){\r\n        for(let i = 0; i < diff; i++){\r\n          targetPositions.push({top: discardPileLoc.y, left: discardPileLoc.x });\r\n          cardNames.push(data.discardPile[data.discardPile.length-1]);\r\n        }\r\n      } else if(diff < 0) {\r\n        for(let i = 0; i > diff; i--){\r\n          initialPositions.push({top: discardPileLoc.y, left: discardPileLoc.x });\r\n        }\r\n      }\r\n    }\r\n\r\n    // Check draw pile diff\r\n    if(!Object.is(drawPile, gameState.drawPile)){\r\n      let diff = drawPile - gameState.drawPile;\r\n      if(diff > 0){\r\n        for(let i = 0; i < diff; i++){\r\n          targetPositions.push({top: drawPileLoc.y, left: drawPileLoc.x + (-1/gameState.drawPile)});\r\n        }\r\n      } else if(diff < 0) {\r\n        for(let i = 0; i > diff; i--){\r\n          initialPositions.push({top: drawPileLoc.y, left: drawPileLoc.x + (-1/gameState.drawPile)});\r\n        }\r\n      }\r\n    }\r\n\r\n    // use player card changed indices\r\n    if(!Object.is(playerCards, gameState.playerCards)){\r\n      let diff = playerCards.length - gameState.playerCards.length;\r\n      for(let index of pCardChangedIndices) {\r\n        if(diff > 0){\r\n          targetPositions.push({top: playerPileLoc.y, left: playerPileLoc.x +(71/playerCards.length)*index});\r\n        } else if(diff < 0) {\r\n          initialPositions.push({top: playerPileLoc.y, left: playerPileLoc.x +(71/playerCards.length)*index});\r\n        }\r\n        cardNames.push(data.playerCards[index]);\r\n      }\r\n    }\r\n  }\r\n\r\n  function updateGameState(e){\r\n    const data = e.detail;\r\n\r\n    /*\r\n     * - get each pile of cards\r\n     * - diff each pile from its old and new state\r\n     * - set target/initial location based on number difference\r\n     * - determine change index of players cards\r\n     *\r\n    */\r\n\r\n    if(gameState.initialRender){\r\n      setGameState({...data, initialRender: false});\r\n    } else {\r\n      let initialPositions = [ ...gameState.animCardsInitial ];\r\n      let targetPositions = [ ...gameState.animCardsTarget ];\r\n      let cardNames = [ ...gameState.animCardsName ];\r\n\r\n      if(data.opponents){\r\n        updateCardAnims(data, initialPositions, targetPositions, cardNames);\r\n      }\r\n\r\n      if(initialPositions.length !== targetPositions.length){\r\n        initialPositions = [];\r\n        targetPositions = [];\r\n        cardNames = [];\r\n      }\r\n\r\n      setGameState({...data, animCardsTarget: targetPositions, animCardsInitial: initialPositions, animCardsName: cardNames});\r\n    }\r\n\r\n    context.currentTurn = data.currentTurn;\r\n  }\r\n\r\n  // when this player is a target of a favor card and is selecting a card to give away\r\n  function selectFavorCard() { \r\n    if(selectedCards.length < 1) return;\r\n    const { lobbyID } = context;\r\n\r\n    if(selectedCards[0] >= 0){\r\n      Socket.send(\"give_favor_card\", {lobbyID: lobbyID, to: gameState.favorTarget, card: gameState.playerCards[selectedCards[0]]});\r\n      //this.setState({favorTarget: undefined});\r\n      //setFavorTarget(undefined);\r\n      setGameState({favorTarget: undefined});\r\n      setSelectedCards([]);\r\n    }\r\n  }\r\n\r\n\r\n  // TODO: show opponent the card that is being hovered to get stolen\r\n  // recieves the index of the card to steal\r\n  function selectStealCard(opponentID, cardIndex){\r\n    const { lobbyID } = context;\r\n\r\n    Socket.send(\"steal_card\", {lobbyID: lobbyID, cardIndex: cardIndex, from: opponentID});\r\n    //this.setState({stealingCard: false});\r\n    //setStealingCard(false);\r\n    setGameState({isStealing: false});\r\n    setSelectedCards([]);\r\n  }\r\n\r\n  // after the player uses defuse card, they can select a place in the draw pile to insert the exploding kitten\r\n  function setExplodingPos(index){\r\n    const { lobbyID } = context;\r\n\r\n    Socket.send(\"set_exploding_pos\", {index: index, lobbyID: lobbyID});\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    // manually update the gamestate on the initial render\r\n    // without this the server can send an update before this component is rendered\r\n    // because the server sends an update as soon as the game begins\r\n    if(gameState.initialRender){\r\n      Socket.send(\"get_game_state\", {lobbyID: context.lobbyID});\r\n    }\r\n\r\n    Socket.addEventListener(\"update_game_state\", updateGameState);\r\n\r\n    return function cleanup(){\r\n      Socket.removeEventListener(\"update_game_state\", updateGameState);\r\n    };\r\n  });\r\n\r\n\r\n  function playSelectedCards(){\r\n    const { lobbyID, currentTurn, ID } = context;\r\n    let cards = selectedCards.map( val => gameState.playerCards[val]);\r\n    if(cards.length < 1 || (cards[0].includes(\"cat\") && cards.length < 2)) return;\r\n\r\n    // TODO: check if selected cards are valid, can only play multiple cards if they are of the same type, otherwise can only play 1 action card at once\r\n\r\n    if(cards[0] === \"nope\" || currentTurn === ID) {\r\n      Socket.send('play_cards', {\r\n        lobbyID: lobbyID,\r\n        cards: cards\r\n      });\r\n      setSelectedCards([]);\r\n    }\r\n  }\r\n\r\n  function selectFavorVictim(victimID) {\r\n    const { lobbyID } = context;\r\n    Socket.send('get_favor_from', { lobbyID: lobbyID, from: victimID });\r\n    //setAskingFavor(false);\r\n    setGameState({askingFavor: false});\r\n  }\r\n\r\n\r\n  function drawCard() {\r\n    const {lobbyID, currentTurn, ID} = context;\r\n    if(!gameState.drewExploding && currentTurn === ID){\r\n      Socket.send(\"end_turn\", {lobbyID: lobbyID});\r\n    }\r\n  }\r\n\r\n  let AnimatedCard = [];\r\n\r\n  for(let i = 0; i < gameState.animCardsInitial.length; i++){\r\n    const keyframes = [\r\n      {top: `${gameState.animCardsInitial[i].top}%`, left: `${gameState.animCardsInitial[i].left}%`},\r\n      {top: `${gameState.animCardsTarget[i].top}%`, left: `${gameState.animCardsTarget[i].left}%`, opacity: 1, offset: 0.93},\r\n      {top: `${gameState.animCardsTarget[i].top}%`, left: `${gameState.animCardsTarget[i].left}%`, opacity: 0}\r\n    ];\r\n\r\n    const timing = {\r\n      duration: 1000,\r\n      easing: 'ease-in',\r\n      delay: 0,\r\n      iterations: 1,\r\n      direction: 'normal',\r\n      fill: 'forwards'\r\n    };\r\n    // FIXME: when one card animation finishes, the rest of the cards will dissapear, remove each card individually\r\n    AnimatedCard.push(\r\n      <Animation key={i} keyframes={keyframes} timing={timing} onFinish={() => {setGameState({animCardsInitial: [], animCardsTarget: [], animCardsName: []});}}>\r\n        <div className={`AnimatedCard ${gameState.animCardsName[i]}`}></div>\r\n      </Animation>);\r\n  }\r\n\r\n\r\n\r\n  const { \r\n    favorTarget, \r\n    insertingExploding, \r\n    currentTurn, \r\n    drewExploding, \r\n    playerCards, \r\n    drawPile, \r\n    discardPile \r\n  } = gameState;\r\n\r\n\r\n  return (\r\n    <div className=\"GameWrapper\">\r\n      <div className=\"Game\">\r\n\r\n        {\r\n        <MoveHistory \r\n          initialPos={moveHistoryLoc}\r\n          size={{width: 24, height: 30}}\r\n        />\r\n        }\r\n\r\n        <Opponents \r\n          opponents={gameState.opponents} \r\n          isStealing={gameState.isStealing} \r\n          favorTarget={gameState.favorTarget}\r\n          askingFavor={gameState.askingFavor}\r\n          selectStealCard={selectStealCard}\r\n          selectFavorCard={selectFavorCard}\r\n          selectFavorVictim={selectFavorVictim}\r\n        />\r\n\r\n\r\n        {AnimatedCard}\r\n\r\n        {\r\n          insertingExploding &&\r\n          <CardStackOverlay\r\n            type=\"unselectable\"\r\n            position={{top: drawPileLoc.y-5+\"%\", left: drawPileLoc.x+\"%\"}}\r\n            size={{width: \"40%\", height: \"28%\"}}\r\n            />\r\n        }\r\n        <CardStack \r\n          cards={drawPile} \r\n          initialPos={drawPileLoc}\r\n          boundary={{width: (insertingExploding ? 40 : 10) }}\r\n          hoverable={insertingExploding}\r\n          selectable={insertingExploding}\r\n          name={gameState.currentTurn === context.ID ? \"Draw Card\" : undefined}\r\n          setSelectPosition={(index) => setExplodingPos(index)}\r\n        />\r\n        {\r\n          (currentTurn === context.ID && !drewExploding && !gameState.askingFavor && !gameState.isStealing) && \r\n            <CardStackOverlay\r\n              type=\"selectable\"\r\n              position={{top: drawPileLoc.y-5+\"%\", left: drawPileLoc.x+\"%\"}}\r\n              size={{width: \"10%\", height: \"28%\"}}\r\n              clickHandler={() => drawCard()}\r\n            />\r\n        }\r\n\r\n\r\n        <CardStack \r\n          cards={discardPile} \r\n          initialPos={discardPileLoc}\r\n          boundary={{width: 8}}\r\n          hoverable={false}\r\n          name=\"Play Cards\"\r\n        />\r\n        {\r\n          (gameState.playerCards.indexOf(\"nope\") > -1 || currentTurn === context.ID ) && \r\n            <CardStackOverlay\r\n              type=\"selectable\"\r\n              position={{top: discardPileLoc.y-5+\"%\", left: discardPileLoc.x+\"%\"}}\r\n              size={{width: \"10%\", height: \"28%\"}}\r\n              clickHandler={() => playSelectedCards()}\r\n            />\r\n        }\r\n\r\n        <CardStack \r\n          cards={playerCards} \r\n          initialPos={playerPileLoc}\r\n          boundary={{width: 80}}\r\n          selectable={true}\r\n          hoverable={true}\r\n          favorTarget={favorTarget}\r\n          selectedCards={selectedCards}\r\n          changeSelectedCards={(cards) => setSelectedCards(cards)}\r\n        />\r\n        {\r\n        gameState.isDead && \r\n          <CardStackOverlay \r\n            type=\"dead\"\r\n            position={{top: (playerPileLoc.y)+\"%\", left: playerPileLoc.x+\"%\"}}\r\n            size={{width: \"80%\", height: \"23%\"}}\r\n            />\r\n        }\r\n\r\n\r\n        { (gameState.currentTurn === context.ID) &&\r\n          <ModalNotification duration={3} msg=\"It's your turn!\"/>\r\n\r\n        }\r\n\r\n        { gameState.drewExploding && \r\n          <ModalNotification duration={5} msg=\"You drew an exploding kitten!\"/>\r\n        }\r\n\r\n        { gameState.favorTarget &&\r\n          <ModalNotification duration={5} msg={gameState.opponents.find(op => op.id === gameState.favorTarget).name + \" is asking you for a favor! Give them a card of your choice.\" }/>\r\n        }\r\n\r\n        { gameState.turnsLeft > 1 &&\r\n          <ModalNotification duration={5} msg={`You have been attacked!, draw a card ${gameState.turnsLeft}x to end your turn.`}/>\r\n        }\r\n\r\n        { gameState.insertingExploding && \r\n          <ModalNotification duration={5} msg=\"Select a spot in the draw pile to hide the exploding kitten\"/>\r\n        }\r\n\r\n        { (gameState.futureCards.length > 0) &&\r\n          <FutureCards cards={gameState.futureCards} resetFutureCards={() => setGameState({futureCards: []})}/>\r\n        }\r\n\r\n        { gameState.winner && <WinnerPopup winner={gameState.winner} opponents={gameState.opponents} ID={context.ID}/> }\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nfunction WinnerPopup(props) {\r\n  let winnerID = props.winner;\r\n  let opponents = props.opponents;\r\n  let clientID = props.ID;\r\n  let winnerName;\r\n\r\n  const context = useContext(AppContext);\r\n  const history = useHistory();\r\n\r\n  // get opponent name\r\n  for(let opp of opponents) { if(opp.id === winnerID) winnerName = opp.name; }\r\n\r\n  function gameOverCleanup() {\r\n    // tell server to delete the game lobby \r\n    Socket.send(\"post_game_cleanup\", {lobbyID: context.lobbyID});\r\n    context.lobbyID = undefined;\r\n    context.inGame = false;\r\n    context.isHost = false;\r\n\r\n    // return to home page\r\n    history.push(\"/\");\r\n  }\r\n\r\n  return(\r\n    <div onClick={() => gameOverCleanup()} className=\"WinnerNotification\">\r\n      <h2>GAME OVER</h2>\r\n      <div >\r\n        {(winnerID === clientID) ? \"You Won!\" : \"You Lost, the winner is \" + winnerName}\r\n      </div>\r\n      <div>Click anywhere to return to home page</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction FutureCards(props) {\r\n  let boundary = 40;\r\n  let spacing = (boundary/3);\r\n  let inc = 0;\r\n  let initialPos = {x: 25, y: 25}\r\n  return (\r\n      <div className=\"FutureCardsNotification\">\r\n        <h3>Future cards</h3>\r\n        {props.cards.map( (cardName, index) => \r\n        <div \r\n          className={\"Card FuturePopup \" + cardName}\r\n          key={index}\r\n          style={{top: initialPos.y+\"%\", left: initialPos.x+(spacing*(inc++))+\"%\", zIndex: 2}}\r\n        ></div>\r\n        )}\r\n        <div onClick={() => props.resetFutureCards()}>Click here to close</div>\r\n      </div>\r\n  )\r\n\r\n}\r\n\r\nfunction MoveHistory(props) {\r\n  const [history, setHistory] = useState([]);\r\n\r\n  const { initialPos, size } = props;\r\n  const lastItem = useRef(null);\r\n\r\n\r\n  function updateMoveHistory(e) {\r\n    const data = e.detail;\r\n\r\n    setHistory(data.moveHistory);\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    Socket.addEventListener(\"update_move_history\", updateMoveHistory);\r\n    if(lastItem.current){\r\n      lastItem.current.scrollIntoView({ behavior: \"smooth\" })\r\n    }\r\n\r\n    return function Cleanup(){\r\n      Socket.removeEventListener(\"update_move_history\", updateMoveHistory);\r\n    }\r\n\r\n  });\r\n\r\n  function formatTime(s) {\r\n    //return (Math.floor(seconds/60) + \":\" + (seconds % 60) );\r\n\r\n    // https://stackoverflow.com/a/37770048\r\n    return(s-(s%=60))/60+(9<s?':':':0')+s;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"MoveHistory\" \r\n      style={{top: (initialPos.y)+\"%\", left: (initialPos.x)+\"%\", width: size.width+\"%\", height: size.height+\"%\"}}>\r\n      <h3>Move History</h3>\r\n      <div className=\"MoveHistory-list\"\r\n      >\r\n        {history.map( (move, index) => <div className=\"MoveHistory-item\" ref={lastItem} key={index}>\r\n          <div>{formatTime(move.time)}</div><div>{move.move}</div>\r\n        </div>)}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\n\r\n\r\nexport default GameHook;\r\n","import React from \"react\";\nimport CreateLobby from \"./CreateLobby\";\nimport LobbyBrowser from \"./LobbyBrowser\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Welcome from \"./Welcome\";\nimport NameForm from \"./NameForm\";\nimport Game from \"./Game\";\nimport AppContext from \"./AppContext\";\nimport Socket from \"./Socket\";\n\nimport \"./App.css\";\n\n\n\nclass Loading extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return <div className=\"Loading\"></div>;\n  }\n}\n\n// FIXME: convert to react hook\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      socket: null,\n      socketReady: false,\n      lobbyID: undefined,\n      playerName: undefined,\n      ID: undefined,\n      isHost: false,\n      inGame: false,\n      currentTurn: undefined,\n    };\n    this.setPlayerName = this.setPlayerName.bind(this);\n    this.websocketConnect = this.websocketConnect.bind(this);\n    this.onCloseCallback = this.onCloseCallback.bind(this);\n    this.onOpenCallback = this.onOpenCallback.bind(this);\n\n  }\n\n  componentDidMount() {\n    const { socket } = this.state;\n    if (!socket || socket.readyState === 0) {\n      console.log(\"Connecting...\");\n      this.websocketConnect();\n    }\n\n  }\n\n  onCloseCallback() {\n    this.setState({socketReady: false});\n  }\n\n  onOpenCallback() {\n    this.setState({socketReady: true});\n  }\n\n  websocketConnect() {\n\n    Socket.addEventListener(\"set_id\", (id) => {\n      this.setState({ ID: id.detail });\n    });\n\n    document.addEventListener(\"socket_state_change\", (state) => {\n      if(state.detail === WebSocket.CLOSED){\n        this.setState({socketReady: false});\n      } else if(state.detail === WebSocket.OPEN) {\n        this.setState({socketReady: true});\n      }\n    })\n\n  }\n\n  setPlayerName(name) {\n    this.setState({ playerName: name });\n  }\n\n  render() {\n    const { socketReady, playerName } = this.state;\n\n\n    // Allow the socket to finish connecting before loading any components\n    if (!socketReady) {\n      return <Loading />;\n    }\n\n    if(false){\n      return(\n      <AppContext.Provider value={this.state}>\n        <div className=\"App\">\n          <Game />\n        </div>\n      </AppContext.Provider>);\n    }\n\n    const askName = playerName ? null : (\n      <NameForm setNameHandler={this.setPlayerName} />\n    );\n\n\n    return (\n      <Router>\n        <AppContext.Provider value={this.state}>\n          <div className=\"App\">\n            {askName}\n            {/* dont allow player to access anything unless their nickname is set */}\n            {(playerName) && (\n              <Switch>\n                <Route exact path=\"/\" component={Welcome} />\n                <Route exact path=\"/createlobby\" component={CreateLobby} />\n                <Route exact path=\"/lobby/:id\" component={CreateLobby} />\n                <Route path=\"/browser\" component={LobbyBrowser} />\n                <Route exact path=\"/game\" component={Game} />\n              </Switch>\n            )}\n          </div>\n        </AppContext.Provider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}